version: "3.8"
services:
  # APP
  panel:
    image: gitlab.abchosting.org:5050/abc-hosting/prog-selflearning/mintme-sandbox:composer-2
    depends_on:
      - db
      - rabbitmq
      - mintme-gateway
      - btc
      - mailhog
    networks:
      - middleend
      - backward
    volumes:
      - .:/var/www/html/panel
      - .docker/panel/.env:/var/www/html/panel/.env
      - .docker/panel/parameters.yaml:/var/www/html/panel/config/parameters.yaml

  mintme-gateway:
    image: gitlab.abchosting.org:5050/abc-hosting/cryptocurrencies/mintme/mintme-gateway:v2.10.0
    depends_on:
      - db
      - rabbitmq
    environment:
      NODE_ENV: development
      DB_HOST: db
      DB_NAME: mintme_gateway
      SERVER_HOST: "0.0.0.0"
      SERVER_PORT: 4001
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    extra_hosts:
      - "node:172.8.0.254"
      - "cryptonode:172.8.0.253"
    ports:
      - 4001:4001
    networks:
      - middleend

  nginx:
    image: nginx:1.23.1-alpine
    ports:
      - 80:80
      - 443:443
      - 16614:16614
      - 8008:8008
    depends_on:
      - panel
      - btc
    networks:
      - middleend
      - backward
    volumes:
      - .docker/nginx:/etc/nginx/conf.d
      - .:/var/www/html/panel
    command: [nginx-debug, '-g', 'daemon off;']

  db:
    image: mariadb:10.9.2
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 3306:3306
    networks:
      - middleend
      - backend
    volumes:
      - .docker/db/init:/docker-entrypoint-initdb.d
      - .docker/db/my.cnf:/etc/mysql/my.cnf

  rabbitmq:
    image: gitlab.abchosting.org:5050/abc-hosting/cryptocurrencies/mintme/panel/rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - middleend
    volumes:
      - .docker/rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config

  # VIABTC
  btc:
    privileged: true
    container_name: btc-service
    image: gitlab.abchosting.org:5050/abc-hosting/cryptocurrencies/mintme/viabtc_exchange_server:new-backend-dev
    ports:
      - 127.0.0.1:17416:7416
      - 127.0.0.1:17316:7316
      - 127.0.0.1:17317:7317
      - 127.0.0.1:17424:7424
      - 127.0.0.1:14444:4444
      - 127.0.0.1:18080:8080
      - 127.0.0.1:18081:8081
      - 127.0.0.1:18091:8091
      - 127.0.0.1:18364:8364
    volumes:
      - .docker/viabtc/btc/configs/matchengine/config.json:/btc/matchengine/config.json
      - .docker/viabtc/btc/configs/accesshttp/config.json:/btc/accesshttp/config.json
      - .docker/viabtc/btc/configs/marketprice/config.json:/btc/marketprice/config.json
      - .docker/viabtc/btc/configs/accessws/config.json:/btc/accessws/config.json
      - .docker/viabtc/btc/configs/alertcenter/config.json:/btc/alertcenter/config.json
      - .docker/viabtc/btc/configs/readhistory/config.json:/btc/readhistory/config.json
    depends_on:
      - db
      - mq
      - redis_sentinel
      - redis_master
    networks:
      - backend
      - backward

  redis_master:
    container_name: btc-redis-master
    image: redis:4.0.6-alpine
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    ports:
      - 16379:6379
    networks:
      - backend
    volumes:
      - .docker/redis.master.conf:/usr/local/etc/redis/redis.conf

  redis_sentinel:
    container_name: btc-redis-sentinel
    image: gitlab.abchosting.org:5050/abc-hosting/cryptocurrencies/mintme/viabtc_exchange_server/redis_sentinel
    environment:
      - MASTER_NAME=mymaster
      - QUORUM=1
      - MASTER=redis_master
    depends_on:
      - redis_master
    networks:
      - backend
    ports:
      - 26379:26379

  zookeeper:
    container_name: btc-zookeeper
    image: zookeeper:3.4.13
    ports:
      - 2181:2181
    networks:
      - backend

  mq:
    container_name: btc-kafka
    image: wurstmeister/kafka:2.13-2.8.1
    restart: on-failure
    ports:
      - 19092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: mq
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    # Remove on Windows
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - backend

  mailhog:
    image: mailhog/mailhog:v1.0.1
    restart: always
    entrypoint: ["/bin/sh", "-c", "MailHog &>/dev/null"]
    ports:
      - 8025:8025
      - 1025:1025
    networks:
      - middleend

  mercure:
    image: dunglas/mercure:v0.14.1
    environment:
        - MERCURE_PUBLISHER_JWT_KEY=!ChangeThisMercureHubJWTSecretKey!
        - MERCURE_SUBSCRIBER_JWT_KEY=!ChangeThisMercureHubJWTSecretKey!
        - SERVER_NAME=":80"
    command: caddy run -config /etc/caddy/Caddyfile.dev
    networks:
      - middleend

networks:
  backward:
    driver: bridge
  middleend:
    driver: bridge
  backend:
    driver: bridge
