security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email
        api_key_user_provider:
            id: App\Security\ApiKeyUserProvider

    firewalls:
        dev:
            pattern: ^(%translation_prefixes%)?/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            anonymous: ~
            pattern: ^/dev/api/(v1|v2/auth)
            stateless: true
            simple_preauth:
                authenticator: App\Security\ApiKeyAuthenticator
            provider: api_key_user_provider
        api_open:
            pattern: ^/dev/api/v2/open
            security: false
        main:
            pattern: ^/
            logout:
                handlers: [logout_listener]
                target: logout_success
                path: fos_user_security_logout
                csrf_token_generator: security.csrf.token_manager
            anonymous: true
            form_login:
                login_path: fos_user_security_login
                check_path: fos_user_security_check
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager
                default_target_path: login_success
                always_use_default_target_path: false
            two_factor:
                provider: fos_userbundle
                auth_form_path: 2fa_login
                check_path: 2fa_login_check
                default_target_path: login_success
                always_use_default_target_path: true
                multi_factor: true
                csrf_token_generator: security.csrf.token_manager
                authentication_required_handler: two_factor.auth_require_handler
        oauth_token:
            pattern:    ^/oauth/v2/token
            security:   false

    role_hierarchy:
        ROLE_AUTENTICATED:
            - ROLE_USER
        ROLE_SEMI_AUTHENTICATED:
            - ROLE_USER
        ROLE_ADMIN_USER_ADMIN:
            - ROLE_ADMIN_USER_LIST
            - ROLE_ADMIN_USER_VIEW
        ROLE_ADMIN_USER_SUPPORT:
            - ROLE_ADMIN_USER_LIST
            - ROLE_ADMIN_USER_VIEW
            - ROLE_ADMIN_USER_EDIT
        ROLE_ADMIN_USER_SUPER:
            - ROLE_ADMIN_USER_ALL
            - ROLE_ADMIN_USER_EDITROLES
        ROLE_ADMIN_NEWS_ADMIN:
            - ROLE_SONATA_NEWS_ADMIN_POST_ALL
            - ROLE_SONATA_NEWS_ADMIN_COMMENT_ALL
            - ROLE_SONATA_MEDIA_ADMIN_MEDIA_ALL
            - ROLE_SONATA_CLASSIFICATION_ADMIN_TAG_ALL
            - ROLE_SONATA_CLASSIFICATION_ADMIN_COLLECTION_ALL
            - ROLE_SONATA_CLASSIFICATION_ADMIN_CONTEXT_ALL
        ROLE_ADMIN: [ROLE_USER, ROLE_ADMIN_USER_ADMIN]
        ROLE_SUPPORTER: [ROLE_ADMIN, ROLE_ADMIN_USER_SUPPORT]
        ROLE_COPYWRITER: [ROLE_ADMIN, ROLE_ADMIN_NEWS_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ADMIN_USER_SUPER, ROLE_COPYWRITER]

    access_control:
        - { path: ^(%translation_prefixes%)/dev/api/(v1|v2/auth),                            role: ROLE_API, requires_channel: https }
        - { path: ^(%translation_prefixes%)/api/media/upload,                                role: ROLE_USER, requires_channel: https }
        - { path: ^(%translation_prefixes%)/api/tokens/[a-zA-Z0-9]+/send-code$,              role: ROLE_USER, requires_channel: https }
        - { path: ^(%translation_prefixes%)/api/tokens/[a-zA-Z0-9]+/delete$,                 role: ROLE_USER, requires_channel: https }
        - { path: ^(%translation_prefixes%)/api/tokens/[a-zA-Z0-9]+/deploy,                  role: ROLE_USER, requires_channel: https }
        - { path: ^(%translation_prefixes%)/api/tokens/[a-zA-Z0-9]+/contract/update,         role: ROLE_USER, requires_channel: https }
        - { path: ^(%translation_prefixes%)/api/posts/comments/delete/[0-9]+,               role: ROLE_USER, requires_channel: https }
        - { path: ^(%translation_prefixes%)/api/users,                                       role: ROLE_USER, requires_channel: https }
        - { path: ^(%translation_prefixes%)/api/message,                                          role: ROLE_USER, requires_channel: https }
        - { path: ^(%translation_prefixes%)/api/orders/cancel-order/[a-zA-Z0-9]+/[0-9]+,     role: ROLE_USER, requires_channel: https }
        - { path: ^(%translation_prefixes%)/token$,                                          role: ROLE_USER, requires_channel: https }
        - { path: ^(%translation_prefixes%)/chat,                                            role: ROLE_USER, requires_channel: https }
        - { path: ^(%translation_prefixes%)/profile/phone/verify,                            role: ROLE_USER, requires_channel: https }
        - { path: ^(%translation_prefixes%)/profile$,                                        role: ROLE_USER, requires_channel: https }
        - { path: ^(%translation_prefixes%)/settings,                                        role: ROLE_USER, requires_channel: https }
        - { path: ^(%translation_prefixes%)/wallet,                                          role: ROLE_USER, requires_channel: https }
        - { path: ^(%translation_prefixes%)/api/notifications,                               role: ROLE_USER, requires_channel: https }
        - { path: ^(%translation_prefixes%)/api/wallet,                                      role: ROLE_USER, requires_channel: https }
        - { path: ^(%translation_prefixes%)/referral-program,                                role: ROLE_USER, requires_channel: https }
        - { path: ^(%translation_prefixes%)/logout$,                                         roles: [ROLE_USER, IS_AUTHENTICATED_2FA_IN_PROGRESS], requires_channel: https }
        - { path: ^(%translation_prefixes%)/api,                                             role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^(%translation_prefixes%)/dev/api/v2/open,                                 role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^(%translation_prefixes%)/register,                                        role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^(%translation_prefixes%)/resetting,                                       role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^(%translation_prefixes%)/2fa,                                             role: IS_AUTHENTICATED_2FA_IN_PROGRESS, requires_channel: https }
        - { path: ^(%translation_prefixes%)/admin,                                           role: ROLE_ADMIN, requires_channel: https }
        - { path: ^(%translation_prefixes%)/admin/_trans,                                    role: ROLE_ADMIN, requires_channel: https}
        - { path: ^(%translation_prefixes%)/home,                                            role: ROLE_USER, requires_channel: https }
